<source>
  @type tail
  format json
  time_key time
  path /var/log/containers/*.log
  pos_file /var/log/monitoring-k8s-nginx-dogstats.log.pos
  time_format %Y-%m-%dT%H:%M:%S.%NZ
  tag reform.*
  read_from_head true
</source>

# Tag any logs we see as nginx.
<match reform.**>
  @type grep
  @log_level debug
  regexp1 log ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")? (?<request_time>[.0-9]*) (?<upstream_request_time>[^ ]*) (?<pipeline>[.p]+)$
  add_tag_prefix nginx_access
</match>

# Attach kubernetes metadata.
<filter nginx_access.**>
  @type kubernetes_metadata
</filter>

# Break down nginx fields into json.
<filter nginx_access.**>
  @type parser
  format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")? (?<request_time>[^ ]*) (?<upstream_response_time>[^ ]*) (?<pipeline>[.p]+)$/
  time_format %d/%b/%Y:%H:%M:%S %z
  key_name log
  reserve_data true
</filter>

# Special transformer to turn out
# data into consumable form for dogstats plugin.
<filter nginx_access.**>
  @type json_transform
  transform_script custom
  script_path "/opt/datadog-transformer.rb"
</filter>

# After transformation we're left with something like:
# {
#   "request_time_ms": "100",
#   "status_code": "404",
#   "tags": {
#     "status_code": "404",
#     "path": "/",
#     "namespace": "monitoring",
#     "container_name": "cluster-monitor",
#     "pod_name": "monitoring/k8s-nginx-dogstats-l4tkw",
#     "kube_name": "cluster-monitor",
#     "kube_date": "2017-03-03T18_13_03"
#   }
# }

# Start breaking this tag down into multiple
# streams by tag key which is used for dogstats key.
<match nginx_access.**>
  @type copy
  <store>
    @type grep
    regexp1 status_code ^1.*
    tag nginx.server_zone.responses.1xx
  </store>
  <store>
    @type grep
    regexp1 status_code ^2.*
    tag nginx.server_zone.responses.2xx
  </store>
  <store>
    @type grep
    regexp1 status_code ^3.*
    tag nginx.server_zone.responses.3xx
  </store>
  <store>
    @type grep
    regexp1 status_code ^4.*
    tag nginx.server_zone.responses.4xx
  </store>
  <store>
    @type grep
    regexp1 status_code ^5.*
    tag nginx.server_zone.responses.5xx
  </store>
  <store>
    @type grep
    regexp1 request_time_ms ^\d+([.]\d+)?$
    tag nginx.request_time
  </store>
  <store>
    @type grep
    regexp1 upstream_response_time_ms ^\d+([.]\d+)?$
    tag nginx.upstream_response_time
  </store>
</match>

# Below are the real outputs
# This should be rewritten as a @include
# so it can be appropriately tested.

<match nginx.server_zone.responses.*>
  @type dogstatsd
  host dogstatsd.datadog
  metric_type increment
  use_tag_as_key true
</match>

<match nginx.request_time>
  @type dogstatsd
  host dogstatsd.datadog
  metric_type histogram
  value_key request_time_ms
  use_tag_as_key true
</match>

<match nginx.upstream_response_time>
  @type dogstatsd
  host dogstatsd.datadog
  metric_type histogram
  value_key upstream_response_time_ms
  use_tag_as_key true
</match>
